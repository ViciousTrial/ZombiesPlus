package net.trial.misgiving.datagen.block;

import net.minecraft.core.HolderLookup;
import net.minecraft.data.PackOutput;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.block.Block;
import net.minecraftforge.common.Tags;
import net.minecraftforge.common.data.BlockTagsProvider;
import net.minecraftforge.common.data.ExistingFileHelper;
import net.trial.misgiving.Misgiving;
import net.trial.misgiving.block.modBlocks;
import net.trial.misgiving.util.modTags;

import org.jetbrains.annotations.Nullable;

import java.util.concurrent.CompletableFuture;

public class blockTagGen extends BlockTagsProvider {
    public blockTagGen(PackOutput output, CompletableFuture<HolderLookup.Provider> lookupProvider, @Nullable ExistingFileHelper existingFileHelper) {
        super(output, lookupProvider, Misgiving.MOD_ID, existingFileHelper);
    }


    @Override
    protected void addTags(HolderLookup.Provider pProvider) {

        this.tag(BlockTags.MINEABLE_WITH_PICKAXE)
        .add(modBlocks.UNKNOWN_MATTER.get())
        .add(modBlocks.UNKNOWN_MATTER_BLACK.get())
        .add(modBlocks.UNKNOWN_MATTER_RED.get())
        .add(modBlocks.UNKNOWN_MATTER_BRIGHT_RED.get())
        .add(modBlocks.CAVITY.get());


        this.tag(BlockTags.NEEDS_IRON_TOOL)
        .add(modBlocks.UNKNOWN_MATTER.get())
        .add(modBlocks.UNKNOWN_MATTER_BLACK.get())
        .add(modBlocks.UNKNOWN_MATTER_RED.get())
        .add(modBlocks.UNKNOWN_MATTER_BRIGHT_RED.get())
        .add(modBlocks.CAVITY.get());
        
    }
}