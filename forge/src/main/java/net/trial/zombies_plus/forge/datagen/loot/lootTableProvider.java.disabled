package net.trial.misgiving.datagen.loot;

import java.util.Set;

import net.minecraft.data.loot.BlockLootSubProvider;
import net.minecraft.world.flag.FeatureFlagSet;
import net.minecraft.world.flag.FeatureFlags;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.enchantment.Enchantments;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.functions.ApplyBonusCount;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraft.world.level.storage.loot.providers.number.UniformGenerator;
import net.minecraftforge.registries.RegistryObject;
import net.trial.misgiving.block.modBlocks;
import net.trial.misgiving.item.modItems;

public class lootTableProvider extends BlockLootSubProvider{

    protected lootTableProvider() {
      super(Set.of(), FeatureFlags.REGISTRY.allFlags());
    }

    @Override
    protected void generate() {
    /*     this.dropSelf(ModBlocks.SAPPHIRE_BLOCK.get());
        this.dropSelf(ModBlocks.RAW_SAPPHIRE_BLOCK.get());
        this.dropSelf(ModBlocks.SOUND_BLOCK.get());

        this.add(ModBlocks.SAPPHIRE_ORE.get(),
                block -> createCopperLikeOreDrops(ModBlocks.SAPPHIRE_ORE.get(), ModItems.RAW_SAPPHIRE.get()));
        this.add(ModBlocks.DEEPSLATE_SAPPHIRE_ORE.get() */

        this.dropSelf(modBlocks.UNKNOWN_MATTER.get());
        this.dropSelf(modBlocks.UNKNOWN_MATTER_BLACK.get());
        this.dropSelf(modBlocks.UNKNOWN_MATTER_RED.get());
        this.dropSelf(modBlocks.UNKNOWN_MATTER_BRIGHT_RED.get());

        this.dropOther(modBlocks.CAVITY.get(), modBlocks.UNKNOWN_MATTER_BLACK.get());

        this.add(modBlocks.CAVITY.get(), block -> createCavityLootTable());
        
    }

      protected LootTable.Builder createCopperLikeOreDrops(Block pBlock, Item item) {
        return createSilkTouchDispatchTable(pBlock,
                this.applyExplosionDecay(pBlock,
                        LootItem.lootTableItem(item)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 5.0F)))
                                .apply(ApplyBonusCount.addOreBonusCount(Enchantments.BLOCK_FORTUNE))));
    }

    private LootTable.Builder createCavityLootTable() {
    LootPool.Builder poolBuilder = LootPool.lootPool()
            .name("cavity")
            .setRolls(ConstantValue.exactly(1))
            .add(LootItem.lootTableItem(modItems.DELUSIVE_CRYSTAL.get())
                    .setWeight(5)
                    .apply(SetItemCountFunction.setCount(UniformGenerator.between(0, 5)))
            );

    return LootTable.lootTable().withPool(poolBuilder);
}

    @Override
    protected Iterable<Block> getKnownBlocks() {
        return modBlocks.BLOCKS.getEntries().stream().map(RegistryObject::get)::iterator;
    }

}
