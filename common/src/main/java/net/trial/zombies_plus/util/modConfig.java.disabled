package net.trial.zombies_plus.util;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import com.google.gson.Gson;

import net.trial.zombies_plus.modMainCommon;

public class modConfig {
     private static modConfig INSTANCE = null;
     private static String configName = String.valueOf(modMainCommon.MOD_ID) + "_config";


     private static final int DEFAULT_SHRIEKER_ZOMBIE_RANGE = Math.max(1, Math.min(225, 1000));


     public boolean zombieTextureOverride = false;
     public boolean tissouZombiePackDetails = false;
     public boolean useBetterAnimations = false;
     public int shriekerZombieRange = DEFAULT_SHRIEKER_ZOMBIE_RANGE; // Default to 225, with min 0 and max 1000

     // Load the configuration from a file
     public static void loadConfig() {
          INSTANCE = new modConfig();
          Gson gson = new Gson();
          File configFile = new File("config/" + configName + "-" + modMainCommon.MOD_VERSION + ".json");

          try (FileReader reader = new FileReader(configFile)) {
               modConfig config = gson.fromJson(reader, modConfig.class);
               if (config != null) {
                    INSTANCE = config;
               }
               modMainCommon.LOGGER.info("Config loaded successfully!");
          } catch (IOException e) {
               modMainCommon.LOGGER.info("Config file not found, creating a new one with default values.");
               saveConfig(); // Save the default config if no file is found
          }

          String[] MOD_VERSIONS = modOldVersions.MOD_VERSIONS;

          for (int i = 0; i < MOD_VERSIONS.length; i++) {
               File oldConfigFile = new File("config/" + configName + "-" + MOD_VERSIONS[i] + ".json");

               try (FileReader reader = new FileReader(oldConfigFile)) {
                    modMainCommon.LOGGER.info("Old config file detected: " + MOD_VERSIONS[i] + ", please remove and use newest config file.");
               } catch (IOException e) {
               }
          }
     }

     private static void mergeConfigs(JsonObject currentConfig, JsonObject defaultConfig) {
          for (Map.Entry<String, JsonElement> entry : defaultConfig.entrySet()) {
               if (!currentConfig.has(entry.getKey())) {
                    currentConfig.add(entry.getKey(), entry.getValue());
               }
          }
     }

     // Save the configuration to a file
     public static void saveConfig() {
          File configFile = new File("config/" + configName + "-" + modMainCommon.MOD_VERSION + ".json");

          try (FileWriter writer = new FileWriter(configFile)) {
               //Gson gson = new GsonBuilder().setPrettyPrinting().create();

               Gson gson = new Gson();
               JsonObject configJson = gson.toJsonTree(INSTANCE).getAsJsonObject();
               
               writer.write("{\n");

               writer.write("  // Use another resource pack for zombie textures? NOTE: Does not work for Brutes.\n");
               writer.write("  \"zombieTextureOverride\": " + configJson.get("zombieTextureOverride") + ",\n");

               writer.write("  // Add details for Tissou Zombie Resource Pack? NOTE: Adds realistic zombie textures for Brutes only. Install the mod 'Entity Texture Features' for emissive eye textures. For Runners and Crawlers, install Tissou's pack and set 'zombie_texture_override' to true.\n");
               writer.write("  \"tissouZombiePackDetails\": " + configJson.get("tissouZombiePackDetails") + ",\n");

               writer.write("  // Use better animations for zombies? Animations similar to Fresh Animations. NOTE: Applies to Brutes and Crawlers only. Crawler's animations might be visually bugged slightly. For Runner and Crossbow zombies, install Fresh Animations pack. If installed, Fresh Animations will override Runner/Crossbow zombie animations.\n");
               writer.write("  \"useBetterAnimations\": " + configJson.get("useBetterAnimations") + ",\n");

               writer.write("  // The range of a Shrieker Zombie in which it alerts other zombies.\n");
               writer.write("  \"shriekerZombieRange\": " + configJson.get("shriekerZombieRange") + "\n");

               writer.write("}\n");
               
               modMainCommon.LOGGER.info("Config saved successfully!");
          } catch (IOException e) {
               modMainCommon.LOGGER.info("Failed to save config file.");
          }
     }

     // Get the instance of the configuration
     public static modConfig getConfig() {
          if (INSTANCE == null) {
               loadConfig();
          }
          return INSTANCE;
     }

     // Validate the value to make sure it is within the allowed range
     public void validateConfig() {
          zombieTextureOverride = false;
          tissouZombiePackDetails = false;
          useBetterAnimations = false;
          shriekerZombieRange = DEFAULT_SHRIEKER_ZOMBIE_RANGE; // Default to 225, with min 0 and max 1000
     }
}
